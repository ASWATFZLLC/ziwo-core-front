{"version":3,"file":"ziwo-core-front.es5.js","sources":["../src/messages.ts","../src/authentication.service.ts","../src/rtc/rtc-client.ts","../src/api/api.service.ts","../src/main.ts"],"sourcesContent":["const MESSAGE_PREFIX = '[LIB Ziwo-core-front] ';\n\nexport const MESSAGES = {\n  EMAIL_PASSWORD_AUTHTOKEN_MISSING: `${MESSAGE_PREFIX}Email or password are missing and no authentication token were provided.`\n};\n","import {ApiService, ApiResult, AsyncApiResult} from './api/api.service';\nimport {MESSAGES} from './messages';\n\n/**\n * Credential provided by Ziwo\n * @email is the agent's email\n * @password is the agent's password\n */\nexport interface Credentials {\n  /**\n   * @email is the agent email\n   * If not provided, please provide @authenticationToken\n   */\n  email:string;\n\n  /**\n   * @email is the agent password\n   * If not provided, please provide @authenticationToken\n   */\n  password:string;\n\n  /**\n   * @authenticationToken is the token provided by the /login API\n   * If not provided, please provide @authenticationToken\n   */\n  authenticationToken?:string;\n}\n\nenum UserStatus {\n  Active = 'active',\n}\n\nenum UserType {\n  Admin = 'admin',\n}\n\nenum UserProfileType {\n  User = 'users'\n}\n\nexport interface User {\n  id:number;\n  firstName:string;\n  lastName:string;\n  username:string;\n  status:UserStatus;\n  type:UserType;\n  photo:string;\n  roleId:number;\n  lastLoginAt:string;\n  contactNumber:null|string;\n  createdAt:string;\n  updatedAt:string;\n  access_token:string;\n  profileType:UserProfileType;\n  role:any;\n  roles:any;\n}\n\nexport class AuthenticationService {\n\n  constructor() {}\n\n  public static authenticate(api:ApiService, credentials:Credentials):Promise<any> {\n    if (credentials.authenticationToken) {\n      api.setToken(credentials.authenticationToken);\n      return this.loginCallCenter(api);\n    }\n    if (!credentials.email || !credentials.password) {\n      throw new Error(MESSAGES.EMAIL_PASSWORD_AUTHTOKEN_MISSING);\n    }\n    return new Promise<any>((onRes, onErr) => {\n      this.loginZiwo(api, credentials.email, credentials.password).then(() => {\n        this.loginCallCenter(api).then(res => onRes(res)).catch(err => onErr(err));\n      }).catch(err => onErr(err));\n    });\n  }\n\n  private static loginCallCenter(api:ApiService):Promise<any> {\n    return new Promise<any>((onRes, onErr) => {\n      api.get(api.endpoints.profile).then(res => {\n        console.log('Agent profile', res);\n      }).catch(err => onErr(err));\n    });\n  }\n\n  private static loginZiwo(api:ApiService, email:string, password:string):Promise<User> {\n    return new Promise<User>((onRes, onErr) => {\n      api.post<User>(api.endpoints.authenticate, {\n        username: email,\n        password: password,\n      }).then(r => {\n        api.setToken(r.content.access_token);\n        onRes(r.content);\n      }).catch(e => {\n        onErr(e);\n      });\n    });\n  }\n\n}\n","/**\n * RtcClient wraps all interaction with WebRTC\n */\nexport class RtcClient {\n\n  constuctor() {}\n\n}\n","\nexport interface ApiResult<T> {\n  result:boolean;\n  info:any;\n  content:T;\n}\n\nexport interface AsyncApiResult<T> extends Promise<ApiResult<T>> {}\n\n/**\n * ApiService wraps the axios to provide quick GET, POST, PUT and DELETE\n *\n * Usage:\n *\n *  const apiService = new ApiService('kalvad-poc'); // contact center name you want to connect to\n *  apiService.get<User>(apiService.endpoints.authenticate) ; // ApiService already defined the endpoints available on Ziwo API\n *    .then( (e) => console.log('User > ', e.data)); // Request object is available under `data`;\n */\nexport class ApiService {\n\n  public readonly endpoints:any;\n\n  private token?:string;\n  private readonly baseUrl:string;\n  private readonly API_PROTOCOL = 'https://';\n  private readonly API_PREFIX = '-api.aswat.co';\n\n  constructor(contactCenterName:string) {\n    this.baseUrl = `${this.API_PROTOCOL}${contactCenterName}${this.API_PREFIX}`;\n    this.endpoints = {\n      authenticate: `/auth/login`,\n      profile: '/profile',\n    };\n  }\n\n  /**\n   * Set Authorization token for further requests\n   */\n  public setToken(token:string):void {\n    this.token = token;\n  }\n\n  /**\n   * Execute a GET query\n   * @endpoint url endpoint. Base url should not be included\n   */\n  public get<T>(endpoint:string):AsyncApiResult<T> {\n    return this.query<T>(endpoint, 'GET');\n  }\n\n  /**\n   * Execute a POST query\n   * @endpoint url endpoint. Base url should not be included\n   */\n  public post<T>(endpoint:string, payload:any):AsyncApiResult<T> {\n    return this.query<T>(endpoint, 'POST', payload);\n  }\n\n  /**\n   * Execute a PUT query\n   * @endpoint url endpoint. Base url should not be included\n   */\n  public put<T>(endpoint:string, payload:any):AsyncApiResult<T> {\n    return this.query<T>(endpoint, 'PUT', payload);\n  }\n\n  /**\n   * Execute a DELETE query\n   * @endpoint url endpoint. Base url should not be included\n   */\n  public delete<T>(endpoint:string):AsyncApiResult<T> {\n    return this.query<T>(endpoint, 'DELETE');\n  }\n\n  private query<T>(endpoint:string, method:'GET'|'POST'|'PUT'|'DELETE', payload?:any):Promise<ApiResult<T>> {\n    return new Promise<ApiResult<T>>((onRes, onErr) => {\n      const fetchOptions:any = {\n        method: method,\n      };\n      if (payload) {\n        fetchOptions.body = JSON.stringify(payload);\n      }\n      window.fetch(`${this.baseUrl}${endpoint}`, {\n        method: method,\n        body: payload ? JSON.stringify(payload) : undefined,\n        headers: {\n          'Content-Type': 'application/json',\n          'access_token': `${this.token}`,\n        }\n      }).then(res => {\n        if (!res.ok) {\n          onErr(`Fetch error: ${res.statusText}`);\n          return;\n        }\n        onRes(res.json());\n      }).catch(err => onErr(err));\n    });\n  }\n\n}\n","import {Credentials, AuthenticationService} from './authentication.service';\nimport {RtcClient} from './rtc/rtc-client';\nimport {ApiService} from './api/api.service';\n\n/**\n * ziwo-core-front provides a client for real time communication using WebRTC integrated with Ziwo\n */\n\nexport interface ZiwoClientOptions {\n  /**\n   * @contactCenterName is the contact center the agent is working for\n   */\n  contactCenterName:string;\n\n  /**\n   * see `authentication.ts#Credentials` for complete definition\n   * If `credentials` is not provided, please provide an Authentication Token\n   */\n  credentials:Credentials;\n\n  /**\n   * @autoConnect let you choose to connect the agent automatically or not.\n   * Default = true\n   * Error is raised if authentication fails. In case you want to handle failed authentication, run `connect` manually\n   */\n  autoConnect:boolean;\n\n}\n\nexport class ZiwoClient {\n\n  public readonly options:ZiwoClientOptions;\n\n  private apiService:ApiService;\n  private rtcClient:RtcClient;\n\n  constructor(options:ZiwoClientOptions) {\n    this.options = options;\n    this.apiService = new ApiService(options.contactCenterName);\n    this.rtcClient = new RtcClient();\n\n    if (options.autoConnect) {\n      this.connect().then().catch(err => {throw err;});\n    }\n  }\n\n  public connect():Promise<any> {\n    return AuthenticationService.authenticate(this.apiService, this.options.credentials);\n  }\n\n}\n"],"names":[],"mappings":"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"}