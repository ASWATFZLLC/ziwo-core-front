{"version":3,"file":"ziwo-core-front.umd.js","sources":["../src/messages.ts","../src/authentication.service.ts","../src/rtc/channel.ts","../src/rtc/userMedia.ts","../src/regex.ts","../src/events.ts","../src/rtc/rtc-client.ts","../src/api.service.ts","../src/main.ts"],"sourcesContent":["const MESSAGE_PREFIX = '[LIB Ziwo-core-front] ';\n\nexport const MESSAGES = {\n  EMAIL_PASSWORD_AUTHTOKEN_MISSING: `${MESSAGE_PREFIX}Email or password are missing and no authentication token were provided.`,\n  INVALID_PHONE_NUMBER: (phoneNumber:string) => `${phoneNumber} is not a valid phone number`,\n  AGENT_NOT_CONNECTED: (action:string) => `Agent is not connected. Cannot proceed '${action}'`,\n};\n","import {ApiService} from './api.service';\nimport {MESSAGES} from './messages';\n\n/**\n * Credential provided by Ziwo\n * @email is the agent's email\n * @password is the agent's password\n */\nexport interface Credentials {\n  /**\n   * @email is the agent email\n   * If not provided, please provide @authenticationToken\n   */\n  email:string;\n\n  /**\n   * @email is the agent password\n   * If not provided, please provide @authenticationToken\n   */\n  password:string;\n\n  /**\n   * @authenticationToken is the token provided by the /login API\n   * If not provided, please provide @authenticationToken\n   */\n  authenticationToken?:string;\n}\n\nenum UserStatus {\n  Active = 'active',\n}\n\nenum UserType {\n  Admin = 'admin',\n}\n\nenum UserProfileType {\n  User = 'users'\n}\n\nexport interface User {\n  id:number;\n  firstName:string;\n  lastName:string;\n  username:string;\n  status:UserStatus;\n  type:UserType;\n  photo:string;\n  roleId:number;\n  lastLoginAt:string;\n  contactNumber:null|string;\n  createdAt:string;\n  updatedAt:string;\n  access_token:string;\n  profileType:UserProfileType;\n  role:any;\n  roles:any;\n}\n\ninterface UserInfo extends User {\n  ccLogin:number;\n  ccPassword:number;\n  liveInfo:any;\n  liveCalls:any[];\n  wrapUpTime:number;\n  noAnswerDelayTime:any;\n  noAnswerTimeout:any;\n  roamingContactNumber:string;\n  roamingTimeout:number;\n}\n\ninterface Queue {\n  announcementType:string;\n  callerIDNumber:any|null;\n  ​createdAt:string;\n  ​deletedAt:string|null;\n  ​id:number;\n  ​image:string|null;\n  ​language:string;\n  ​maxWaitTime:number;\n  ​moh:string;\n  ​name:string;\n  ​nonWorkingHoursDID:string;\n  ​priority:number;\n  ​status:string;\n  ​strategyType:string;\n  ​surveyRequired:boolean;\n  ​timeslots:string;\n  ​updatedAt:string;\n  ​urgentMessage:any|null;\n  ​waitTimeoutDID:string;\n}\n\ninterface Number {\n  beyondTimeslotsLinkData:any|null;\n  ​​beyondTimeslotsLinkType:any|null;\n  ​​createdAt:string;\n  ​​deletedAt:any|null;\n  ​​did:string;\n  ​​didCalled:string;\n  ​​didDisplay:string;\n  ​​id:number;\n  ​​linkData:string;\n  ​​linkType:string;\n  ​​status:string;\n  ​​length:number;\n  ​​timeslots:any[];\n  ​​updatedAt:string;\n  ​​urgentMessage:any|null;\n}\n\ninterface WebRtcInfo {\n  port:string;\n  protocol:string;\n}\n\nexport interface AgentInfo {\n  userInfo:UserInfo;\n  queues:Queue[];\n  numbers:Number[];\n  webRtc:WebRtcInfo;\n}\n\n\nexport class AuthenticationService {\n\n  constructor() {}\n\n  public static authenticate(api:ApiService, credentials:Credentials):Promise<AgentInfo> {\n    if (credentials.authenticationToken) {\n      api.setToken(credentials.authenticationToken);\n      return new Promise<any>((onRes, onErr) => {\n        this.initAgent(api).then(res => onRes(res)).catch(err => onErr(err));\n      });\n    }\n    if (!credentials.email || !credentials.password) {\n      throw new Error(MESSAGES.EMAIL_PASSWORD_AUTHTOKEN_MISSING);\n    }\n    return new Promise<any>((onRes, onErr) => {\n      this.loginZiwo(api, credentials.email, credentials.password).then(() => {\n        this.initAgent(api).then(res => onRes(res)).catch(err => onErr(err));\n      }).catch(err => onErr(err));\n    });\n  }\n\n  private static loginZiwo(api:ApiService, email:string, password:string):Promise<User> {\n    return new Promise<User>((onRes, onErr) => {\n      api.post<User>(api.endpoints.authenticate, {\n        username: email,\n        password: password,\n      }).then(r => {\n        api.setToken(r.content.access_token);\n        onRes(r.content);\n      }).catch(e => {\n        onErr(e);\n      });\n    });\n  }\n\n  private static initAgent(api:ApiService):Promise<AgentInfo> {\n    return new Promise<AgentInfo>((onRes, onErr) => {\n      Promise.all([\n        this.fetchAgentProfile(api),\n        this.fetchListQueues(api),\n        this.fetchListNumbers(api),\n        this.fetchWebRTCConfig(api),\n      ]).then(res => {\n        onRes({\n          userInfo: res[0],\n          queues: res[1] || [],\n          numbers: res[2] || [],\n          webRtc: res[3],\n        });\n      })\n      .catch(err => onErr(err));\n    });\n  }\n\n  private static fetchAgentProfile(api:ApiService):Promise<any> {\n    return new Promise<any>((onRes, onErr) => {\n      api.get(api.endpoints.profile).then(res => {\n        onRes(res.content);\n      }).catch(err => onErr(err));\n    });\n  }\n\n  private static fetchListQueues(api:ApiService):Promise<any> {\n    return new Promise<any>((onRes, onErr) => {\n      api.get('/agents/channels/calls/listQueues').then(res => {\n        onRes(res.content);\n      }).catch(err => onErr(err));\n    });\n  }\n\n  private static fetchListNumbers(api:ApiService):Promise<any> {\n    return new Promise<any>((onRes, onErr) => {\n      api.get('/agents/channels/calls/listNumbers').then(res => {\n        onRes(res.content);\n      }).catch(err => onErr(err));\n    });\n  }\n\n  private static fetchWebRTCConfig(api:ApiService):Promise<any> {\n    return new Promise<any>((onRes, onErr) => {\n      api.get('/fs/webrtc/config').then(res => {\n        onRes(res.content);\n      }).catch(err => onErr(err));\n    });\n  }\n\n}\n","\ninterface MicrophoneData {\n  filterNode:BiquadFilterNode;\n  gainNode:GainNode;\n  source:MediaStreamAudioSourceNode;\n}\n\nexport interface VideoInfo {\n  selfTag?:Element;\n  peerTag?:Element;\n}\n\nexport class Channel {\n\n  public readonly stream:any;\n\n  private microphone?:MicrophoneData;\n\n  private readonly audioContext:AudioContext;\n\n  constructor(stream:any) {\n    this.stream = stream;\n    this.audioContext = this.getAudioContext();\n  }\n\n  public startMicrophone():void {\n    // see https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html#BiquadFilterNode-section\n    const filterNode = this.audioContext.createBiquadFilter();\n    filterNode.type = 'highpass';\n    // cutoff frequency: for highpass, audio is attenuated below this frequency\n    filterNode.frequency.value = 10000;\n\n    // create a gain node (to change audio volume)\n    const gainNode = this.audioContext.createGain();\n    // default is 1 (no change); less than 1 means audio is attenuated and vice versa\n    gainNode.gain.value = 0.5;\n\n    const source = this.audioContext.createMediaStreamSource(this.stream);\n\n    this.microphone = {\n      filterNode,\n      gainNode,\n      source,\n    };\n  }\n\n  public bindVideo(el:any):void {\n    if (!el.srcObject) {\n      // TODO : emit appropriate error message\n      return;\n    }\n    el.srcObject = this.stream;\n  }\n\n  private getAudioContext():AudioContext {\n    let audioContext;\n    if (typeof AudioContext === 'function') {\n      audioContext = new AudioContext();\n    } else {\n      throw new Error('Web audio not supported');\n    }\n    return audioContext;\n  }\n\n}\n","import {Channel} from './channel';\n\nexport interface MediaRequested {\n  audio?:boolean;\n  video?:{\n    selfTag:Element;\n    peerTag:Element;\n  };\n}\n\nexport class UserMedia {\n\n  public static getUserMedia(mediaRequested:UserMedia):Promise<Channel> {\n    return new Promise<Channel>((onRes, onErr) => {\n      try {\n        navigator.mediaDevices.getUserMedia(mediaRequested).then((stream) => {\n          onRes(new Channel(stream));\n        });\n      } catch (e) {\n        onErr(e);\n      }\n    });\n  }\n\n}\n","\nexport const PATTERNS = {\n  phoneNumber: /^\\+?\\d+$/,\n};\n","\n/**\n * TODO : documentation\n * TODO : define interface for each available type?\n * TODO : define all event type\n */\n\nexport enum ErrorCode {\n  InvalidPhoneNumber,\n  UserMediaError,\n  AgentNotConnected,\n}\n\nexport interface ErrorData {\n  code:ErrorCode;\n  message:string;\n  data?:any;\n}\n\nexport enum ZiwoEventType {\n  Error = 'Error',\n  AgentConnected = 'AgentConnected',\n  IncomingCall = 'IncomingCall',\n  OutgoingCall = 'OutgoingCall',\n  CallStarted = 'CallStarted',\n  CallEndedByUser = 'CallEndedByUser',\n  CallEndedByPeer = 'CallEndedByPeer',\n}\n\nexport class ZiwoEvent {\n\n  public static listeners:Function[] = [];\n\n  public static subscribe(func:Function):void {\n    this.listeners.push(func);\n  }\n\n  public static emit(type:ZiwoEventType, data?:any):void {\n    this.listeners.forEach(x => x(type, data));\n  }\n}\n","import {AgentInfo} from '../authentication.service';\nimport {UserMedia} from './userMedia';\nimport {PATTERNS} from '../regex';\nimport {MESSAGES} from '../messages';\nimport {ZiwoEvent, ZiwoEventType, ErrorCode} from '../events';\nimport {Channel, VideoInfo} from './channel';\n\nenum RtcAction {\n  StartCall = 'Start call',\n}\n\nexport interface MediaConstraint {\n  audio:boolean;\n  video:boolean;\n}\n\n/**\n * RtcClient wraps all interaction with WebRTC\n */\nexport class RtcClient {\n\n  public connectedAgent?:AgentInfo;\n  public channel?:Channel;\n  public videoInfo?:VideoInfo;\n\n  constructor(video?:VideoInfo) {\n    if (video) {\n      this.videoInfo = video;\n    }\n  }\n\n  /**\n   * Connect an agent using its Info\n   */\n  public connectAgent(agent:AgentInfo):void {\n    console.log('Init RTC with > ', agent);\n    this.connectedAgent = agent;\n    UserMedia.getUserMedia({audio: true, video: this.videoInfo ? true : false})\n      .then(c => {\n        this.channel = c;\n        window.setTimeout(() => {\n          ZiwoEvent.emit(ZiwoEventType.AgentConnected);\n        }, 100);\n      }).catch(e => {\n        ZiwoEvent.emit(ZiwoEventType.Error, {\n          code: ErrorCode.UserMediaError,\n          message: e,\n        });\n      });\n  }\n\n  /**\n   * Get connected Agent returns the Info of the current agent\n   */\n  public getConnectedAgent():AgentInfo|undefined {\n    return this.connectedAgent;\n  }\n\n  /**\n   * Return true if an agent is connected\n   */\n  public isAgentConnected():boolean {\n    return !! this.connectedAgent && !! this.channel;\n  }\n\n  public startCall(phoneNumber:string):void {\n    if (!this.isAgentConnected() || !this.channel) {\n      this.sendNotConnectedEvent('start call');\n      return;\n    }\n    if (!PATTERNS.phoneNumber.test(phoneNumber)) {\n      return ZiwoEvent.emit(ZiwoEventType.Error, {\n        code: ErrorCode.InvalidPhoneNumber,\n        message: MESSAGES.INVALID_PHONE_NUMBER(phoneNumber),\n        data: {\n          phoneNumber: phoneNumber,\n        }\n      });\n    }\n    this.channel?.startMicrophone();\n    if (this.videoInfo && this.videoInfo.selfTag) {\n      this.channel.bindVideo(this.videoInfo.selfTag);\n    }\n  }\n\n  private sendNotConnectedEvent(action:string):void {\n    return ZiwoEvent.emit(ZiwoEventType.Error, {\n      code: ErrorCode.InvalidPhoneNumber,\n      message: MESSAGES.AGENT_NOT_CONNECTED(action),\n    });\n  }\n\n}\n","\nexport interface ApiResult<T> {\n  result:boolean;\n  info:any;\n  content:T;\n}\n\nexport interface AsyncApiResult<T> extends Promise<ApiResult<T>> {}\n\n/**\n * ApiService wraps the axios to provide quick GET, POST, PUT and DELETE\n *\n * Usage:\n *\n *  const apiService = new ApiService('kalvad-poc'); // contact center name you want to connect to\n *  apiService.get<User>(apiService.endpoints.authenticate) ; // ApiService already defined the endpoints available on Ziwo API\n *    .then( (e) => console.log('User > ', e.data)); // Request object is available under `data`;\n */\nexport class ApiService {\n\n  public readonly endpoints:any;\n\n  private token?:string;\n  private readonly baseUrl:string;\n  private readonly API_PROTOCOL = 'https://';\n  private readonly API_PREFIX = '-api.aswat.co';\n\n  constructor(contactCenterName:string) {\n    this.baseUrl = `${this.API_PROTOCOL}${contactCenterName}${this.API_PREFIX}`;\n    this.endpoints = {\n      authenticate: `/auth/login`,\n      profile: '/profile',\n    };\n  }\n\n  /**\n   * Set Authorization token for further requests\n   */\n  public setToken(token:string):void {\n    this.token = token;\n  }\n\n  /**\n   * Execute a GET query\n   * @endpoint url endpoint. Base url should not be included\n   */\n  public get<T>(endpoint:string):AsyncApiResult<T> {\n    return this.query<T>(endpoint, 'GET');\n  }\n\n  /**\n   * Execute a POST query\n   * @endpoint url endpoint. Base url should not be included\n   */\n  public post<T>(endpoint:string, payload:any):AsyncApiResult<T> {\n    return this.query<T>(endpoint, 'POST', payload);\n  }\n\n  /**\n   * Execute a PUT query\n   * @endpoint url endpoint. Base url should not be included\n   */\n  public put<T>(endpoint:string, payload:any):AsyncApiResult<T> {\n    return this.query<T>(endpoint, 'PUT', payload);\n  }\n\n  /**\n   * Execute a DELETE query\n   * @endpoint url endpoint. Base url should not be included\n   */\n  public delete<T>(endpoint:string):AsyncApiResult<T> {\n    return this.query<T>(endpoint, 'DELETE');\n  }\n\n  private query<T>(endpoint:string, method:'GET'|'POST'|'PUT'|'DELETE', payload?:any):Promise<ApiResult<T>> {\n    return new Promise<ApiResult<T>>((onRes, onErr) => {\n      const fetchOptions:any = {\n        method: method,\n      };\n      if (payload) {\n        fetchOptions.body = JSON.stringify(payload);\n      }\n      window.fetch(`${this.baseUrl}${endpoint}`, {\n        method: method,\n        body: payload ? JSON.stringify(payload) : undefined,\n        headers: {\n          'Content-Type': 'application/json',\n          'access_token': `${this.token}`,\n        }\n      }).then(res => {\n        if (!res.ok) {\n          onErr(`Fetch error: ${res.statusText}`);\n          return;\n        }\n        onRes(res.json());\n      }).catch(err => onErr(err));\n    });\n  }\n\n}\n","import {Credentials, AuthenticationService, AgentInfo} from './authentication.service';\nimport {RtcClient} from './rtc/rtc-client';\nimport {ApiService} from './api.service';\nimport {ZiwoEvent, ZiwoEventType} from './events';\nimport {VideoInfo} from './rtc/channel';\n\n/**\n * ziwo-core-front provides a client for real time communication using WebRTC integrated with Ziwo\n */\n\nexport interface ZiwoClientOptions {\n  /**\n   * @contactCenterName is the contact center the agent is working for\n   */\n  contactCenterName:string;\n\n  /**\n   * see `authentication.ts#Credentials` for complete definition\n   * If `credentials` is not provided, please provide an Authentication Token\n   */\n  credentials:Credentials;\n\n  /**\n   * @autoConnect let you choose to connect the agent automatically or not.\n   * Default = true\n   * Error is raised if authentication fails. In case you want to handle failed authentication, run `connect` manually\n   */\n  autoConnect:boolean;\n\n  /**\n   *\n   */\n  video?:VideoInfo;\n}\n\nexport class ZiwoClient {\n\n  public readonly options:ZiwoClientOptions;\n\n  private apiService:ApiService;\n  private rtcClient:RtcClient;\n\n  constructor(options:ZiwoClientOptions) {\n    this.options = options;\n    this.apiService = new ApiService(options.contactCenterName);\n    this.rtcClient = new RtcClient(options.video);\n    if (options.autoConnect) {\n      this.connect().then(r => {\n      }).catch(err => { throw err; });\n    }\n  }\n\n  public connect():Promise<AgentInfo> {\n    return new Promise<any>((onRes, onErr) => {\n      AuthenticationService.authenticate(this.apiService, this.options.credentials)\n        .then(res => {\n          this.rtcClient.connectAgent(res);\n          onRes(res);\n        }).catch(err => onErr(err));\n    });\n  }\n\n  public addListener(func:Function):void {\n    return ZiwoEvent.subscribe(func);\n  }\n\n  public startCall(phoneNumber:string):void {\n    this.rtcClient.startCall(phoneNumber);\n  }\n\n}\n"],"names":[],"mappings":";;;;;;EAAA,MAAM,cAAc,GAAG,wBAAwB,CAAC;EAEzC,MAAM,QAAQ,GAAG;MACtB,gCAAgC,EAAE,GAAG,cAAc,0EAA0E;MAC7H,oBAAoB,EAAE,CAAC,WAAkB,KAAK,GAAG,WAAW,8BAA8B;MAC1F,mBAAmB,EAAE,CAAC,MAAa,KAAK,2CAA2C,MAAM,GAAG;GAC7F,CAAC;;;ECsBF,IAAK,UAEJ;EAFD,WAAK,UAAU;MACb,+BAAiB,CAAA;EACnB,CAAC,EAFI,UAAU,KAAV,UAAU,QAEd;EAED,IAAK,QAEJ;EAFD,WAAK,QAAQ;MACX,2BAAe,CAAA;EACjB,CAAC,EAFI,QAAQ,KAAR,QAAQ,QAEZ;EAED,IAAK,eAEJ;EAFD,WAAK,eAAe;MAClB,iCAAc,CAAA;EAChB,CAAC,EAFI,eAAe,KAAf,eAAe,QAEnB;AAsFD,QAAa,qBAAqB;MAEhC,iBAAgB;MAET,OAAO,YAAY,CAAC,GAAc,EAAE,WAAuB;UAChE,IAAI,WAAW,CAAC,mBAAmB,EAAE;cACnC,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;cAC9C,OAAO,IAAI,OAAO,CAAM,CAAC,KAAK,EAAE,KAAK;kBACnC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;eACtE,CAAC,CAAC;WACJ;UACD,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;cAC/C,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,gCAAgC,CAAC,CAAC;WAC5D;UACD,OAAO,IAAI,OAAO,CAAM,CAAC,KAAK,EAAE,KAAK;cACnC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;kBAChE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;eACtE,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;WAC7B,CAAC,CAAC;OACJ;MAEO,OAAO,SAAS,CAAC,GAAc,EAAE,KAAY,EAAE,QAAe;UACpE,OAAO,IAAI,OAAO,CAAO,CAAC,KAAK,EAAE,KAAK;cACpC,GAAG,CAAC,IAAI,CAAO,GAAG,CAAC,SAAS,CAAC,YAAY,EAAE;kBACzC,QAAQ,EAAE,KAAK;kBACf,QAAQ,EAAE,QAAQ;eACnB,CAAC,CAAC,IAAI,CAAC,CAAC;kBACP,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;kBACrC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;eAClB,CAAC,CAAC,KAAK,CAAC,CAAC;kBACR,KAAK,CAAC,CAAC,CAAC,CAAC;eACV,CAAC,CAAC;WACJ,CAAC,CAAC;OACJ;MAEO,OAAO,SAAS,CAAC,GAAc;UACrC,OAAO,IAAI,OAAO,CAAY,CAAC,KAAK,EAAE,KAAK;cACzC,OAAO,CAAC,GAAG,CAAC;kBACV,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC;kBAC3B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC;kBACzB,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;kBAC1B,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC;eAC5B,CAAC,CAAC,IAAI,CAAC,GAAG;kBACT,KAAK,CAAC;sBACJ,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;sBAChB,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;sBACpB,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;sBACrB,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;mBACf,CAAC,CAAC;eACJ,CAAC;mBACD,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;WAC3B,CAAC,CAAC;OACJ;MAEO,OAAO,iBAAiB,CAAC,GAAc;UAC7C,OAAO,IAAI,OAAO,CAAM,CAAC,KAAK,EAAE,KAAK;cACnC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG;kBACrC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;eACpB,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;WAC7B,CAAC,CAAC;OACJ;MAEO,OAAO,eAAe,CAAC,GAAc;UAC3C,OAAO,IAAI,OAAO,CAAM,CAAC,KAAK,EAAE,KAAK;cACnC,GAAG,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC,IAAI,CAAC,GAAG;kBACnD,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;eACpB,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;WAC7B,CAAC,CAAC;OACJ;MAEO,OAAO,gBAAgB,CAAC,GAAc;UAC5C,OAAO,IAAI,OAAO,CAAM,CAAC,KAAK,EAAE,KAAK;cACnC,GAAG,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC,IAAI,CAAC,GAAG;kBACpD,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;eACpB,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;WAC7B,CAAC,CAAC;OACJ;MAEO,OAAO,iBAAiB,CAAC,GAAc;UAC7C,OAAO,IAAI,OAAO,CAAM,CAAC,KAAK,EAAE,KAAK;cACnC,GAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,GAAG;kBACnC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;eACpB,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;WAC7B,CAAC,CAAC;OACJ;GAEF;;;QCtMY,OAAO;MAQlB,YAAY,MAAU;UACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;UACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;OAC5C;MAEM,eAAe;;UAEpB,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC;UAC1D,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC;;UAE7B,UAAU,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;;UAGnC,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;;UAEhD,QAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;UAE1B,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UAEtE,IAAI,CAAC,UAAU,GAAG;cAChB,UAAU;cACV,QAAQ;cACR,MAAM;WACP,CAAC;OACH;MAEM,SAAS,CAAC,EAAM;UACrB,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE;;cAEjB,OAAO;WACR;UACD,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;OAC5B;MAEO,eAAe;UACrB,IAAI,YAAY,CAAC;UACjB,IAAI,OAAO,YAAY,KAAK,UAAU,EAAE;cACtC,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;WACnC;eAAM;cACL,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;WAC5C;UACD,OAAO,YAAY,CAAC;OACrB;GAEF;;;QCtDY,SAAS;MAEb,OAAO,YAAY,CAAC,cAAwB;UACjD,OAAO,IAAI,OAAO,CAAU,CAAC,KAAK,EAAE,KAAK;cACvC,IAAI;kBACF,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM;sBAC9D,KAAK,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;mBAC5B,CAAC,CAAC;eACJ;cAAC,OAAO,CAAC,EAAE;kBACV,KAAK,CAAC,CAAC,CAAC,CAAC;eACV;WACF,CAAC,CAAC;OACJ;GAEF;;;ECvBM,MAAM,QAAQ,GAAG;MACtB,WAAW,EAAE,UAAU;GACxB,CAAC;;;ECFF;;;;;AAMA,EAAA,IAAY,SAIX;EAJD,WAAY,SAAS;MACnB,qEAAkB,CAAA;MAClB,6DAAc,CAAA;MACd,mEAAiB,CAAA;EACnB,CAAC,EAJW,SAAS,KAAT,SAAS,QAIpB;AAQD,EAAA,IAAY,aAQX;EARD,WAAY,aAAa;MACvB,gCAAe,CAAA;MACf,kDAAiC,CAAA;MACjC,8CAA6B,CAAA;MAC7B,8CAA6B,CAAA;MAC7B,4CAA2B,CAAA;MAC3B,oDAAmC,CAAA;MACnC,oDAAmC,CAAA;EACrC,CAAC,EARW,aAAa,KAAb,aAAa,QAQxB;AAED,QAAa,SAAS;MAIb,OAAO,SAAS,CAAC,IAAa;UACnC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OAC3B;MAEM,OAAO,IAAI,CAAC,IAAkB,EAAE,IAAS;UAC9C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;OAC5C;;EARa,mBAAS,GAAc,EAAE,CAAC;;;ECxB1C,IAAK,SAEJ;EAFD,WAAK,SAAS;MACZ,qCAAwB,CAAA;EAC1B,CAAC,EAFI,SAAS,KAAT,SAAS,QAEb;EAOD;;;AAGA,QAAa,SAAS;MAMpB,YAAY,KAAgB;UAC1B,IAAI,KAAK,EAAE;cACT,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;WACxB;OACF;;;;MAKM,YAAY,CAAC,KAAe;UACjC,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;UACvC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;UAC5B,SAAS,CAAC,YAAY,CAAC,EAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,KAAK,EAAC,CAAC;eACxE,IAAI,CAAC,CAAC;cACL,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;cACjB,MAAM,CAAC,UAAU,CAAC;kBAChB,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;eAC9C,EAAE,GAAG,CAAC,CAAC;WACT,CAAC,CAAC,KAAK,CAAC,CAAC;cACR,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;kBAClC,IAAI,EAAE,SAAS,CAAC,cAAc;kBAC9B,OAAO,EAAE,CAAC;eACX,CAAC,CAAC;WACJ,CAAC,CAAC;OACN;;;;MAKM,iBAAiB;UACtB,OAAO,IAAI,CAAC,cAAc,CAAC;OAC5B;;;;MAKM,gBAAgB;UACrB,OAAO,CAAC,CAAE,IAAI,CAAC,cAAc,IAAI,CAAC,CAAE,IAAI,CAAC,OAAO,CAAC;OAClD;MAEM,SAAS,CAAC,WAAkB;;UACjC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;cAC7C,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;cACzC,OAAO;WACR;UACD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;cAC3C,OAAO,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;kBACzC,IAAI,EAAE,SAAS,CAAC,kBAAkB;kBAClC,OAAO,EAAE,QAAQ,CAAC,oBAAoB,CAAC,WAAW,CAAC;kBACnD,IAAI,EAAE;sBACJ,WAAW,EAAE,WAAW;mBACzB;eACF,CAAC,CAAC;WACJ;UACD,MAAA,IAAI,CAAC,OAAO,0CAAE,eAAe,GAAG;UAChC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;cAC5C,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;WAChD;OACF;MAEO,qBAAqB,CAAC,MAAa;UACzC,OAAO,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;cACzC,IAAI,EAAE,SAAS,CAAC,kBAAkB;cAClC,OAAO,EAAE,QAAQ,CAAC,mBAAmB,CAAC,MAAM,CAAC;WAC9C,CAAC,CAAC;OACJ;GAEF;;;ECnFD;;;;;;;;;AASA,QAAa,UAAU;MASrB,YAAY,iBAAwB;UAHnB,iBAAY,GAAG,UAAU,CAAC;UAC1B,eAAU,GAAG,eAAe,CAAC;UAG5C,IAAI,CAAC,OAAO,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,iBAAiB,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;UAC5E,IAAI,CAAC,SAAS,GAAG;cACf,YAAY,EAAE,aAAa;cAC3B,OAAO,EAAE,UAAU;WACpB,CAAC;OACH;;;;MAKM,QAAQ,CAAC,KAAY;UAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;OACpB;;;;;MAMM,GAAG,CAAI,QAAe;UAC3B,OAAO,IAAI,CAAC,KAAK,CAAI,QAAQ,EAAE,KAAK,CAAC,CAAC;OACvC;;;;;MAMM,IAAI,CAAI,QAAe,EAAE,OAAW;UACzC,OAAO,IAAI,CAAC,KAAK,CAAI,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;OACjD;;;;;MAMM,GAAG,CAAI,QAAe,EAAE,OAAW;UACxC,OAAO,IAAI,CAAC,KAAK,CAAI,QAAQ,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;OAChD;;;;;MAMM,MAAM,CAAI,QAAe;UAC9B,OAAO,IAAI,CAAC,KAAK,CAAI,QAAQ,EAAE,QAAQ,CAAC,CAAC;OAC1C;MAEO,KAAK,CAAI,QAAe,EAAE,MAAkC,EAAE,OAAY;UAChF,OAAO,IAAI,OAAO,CAAe,CAAC,KAAK,EAAE,KAAK;cAC5C,MAAM,YAAY,GAAO;kBACvB,MAAM,EAAE,MAAM;eACf,CAAC;cACF,IAAI,OAAO,EAAE;kBACX,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;eAC7C;cACD,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,EAAE,EAAE;kBACzC,MAAM,EAAE,MAAM;kBACd,IAAI,EAAE,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,SAAS;kBACnD,OAAO,EAAE;sBACP,cAAc,EAAE,kBAAkB;sBAClC,cAAc,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE;mBAChC;eACF,CAAC,CAAC,IAAI,CAAC,GAAG;kBACT,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE;sBACX,KAAK,CAAC,gBAAgB,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC;sBACxC,OAAO;mBACR;kBACD,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;eACnB,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;WAC7B,CAAC,CAAC;OACJ;GAEF;;;QChEY,UAAU;MAOrB,YAAY,OAAyB;UACnC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;UACvB,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;UAC5D,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;UAC9C,IAAI,OAAO,CAAC,WAAW,EAAE;cACvB,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;eACpB,CAAC,CAAC,KAAK,CAAC,GAAG,MAAM,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;WACjC;OACF;MAEM,OAAO;UACZ,OAAO,IAAI,OAAO,CAAM,CAAC,KAAK,EAAE,KAAK;cACnC,qBAAqB,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;mBAC1E,IAAI,CAAC,GAAG;kBACP,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;kBACjC,KAAK,CAAC,GAAG,CAAC,CAAC;eACZ,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;WAC/B,CAAC,CAAC;OACJ;MAEM,WAAW,CAAC,IAAa;UAC9B,OAAO,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;OAClC;MAEM,SAAS,CAAC,WAAkB;UACjC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;OACvC;GAEF;;;;;;;;;;;;"}